- name: Run Eureka server's docker compose
  hosts: eureka_server
  become: true
  become_user: ec2-user

  tasks:
    - name: Ensure eureka directory exists
      file:
        path: "~/eureka"
        state: directory

    - name: Copy .env file to target machine
      copy:
        src: .env
        dest: "~/eureka/.env"

    - name: Pull Docker image from Docker Hub
      docker_image:
        name: "diamobachar/service-discovery:latest"
        source: pull

    - name: Fetch Docker Compose file from GitHub
      get_url:
        url: "https://raw.githubusercontent.com/Form-iit/service-discovery/main/docker-compose.yml"
        dest: "~/eureka/docker-compose.yml"

    - name: Start Docker Compose
      community.docker.docker_compose:
        project_src: "~/eureka"
        env_file: "~/eureka/.env"
        pull: yes
        state: present
    
    - name: Load Eureka credentials
      block:
        - name: Read Eureka username
          lineinfile:
            path: ~/eureka/.env
            regexp: '^EUREKA_ADMIN_USERNAME='
            state: present
          register: username_line

        - name: Read Eureka password
          lineinfile:
            path: ~/eureka/.env
            regexp: '^EUREKA_ADMIN_PASSWORD='
            state: present
          register: password_line

        - name: Set credentials
          set_fact:
            credentials:
              username: "{{ username_line.line.split('=')[1] }}"
              password: "{{ password_line.line.split('=')[1] }}"

    - name: Wait for Eureka service to be ready
      uri:
        url: "http://localhost:8761/actuator/health"
        status_code: 200
        user: "{{ eureka_credentials.username }}"
        password: "{{ eureka_credentials.password }}"
        force_basic_auth: yes
      register: health_check
      retries: 10
      delay: 5
      until: 
        - health_check.status == 200
        - (health_check.json.status | default('')) == 'UP'
      failed_when:
        - health_check.status != 200
        - (health_check.json.status | default('')) != 'UP' 
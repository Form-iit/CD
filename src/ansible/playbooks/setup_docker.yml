- name: "Apply Security Updates"
  hosts: api_gw,eureka_server
  become: true

  tasks:
    - name: Check if Docker is installed
      ansible.builtin.command: docker --version
      register: docker_check
      ignore_errors: true
      changed_when: false

    - name: Check if Docker Compose is installed
      ansible.builtin.command: docker-compose --version
      register: compose_check
      ignore_errors: true
      changed_when: false

    - name: Check if Git is installed
      ansible.builtin.command: git --version
      register: git_check
      ignore_errors: true
      changed_when: false
    
    - name: Display current versions
      ansible.builtin.debug:
        msg: 
          - "Docker version: {{ docker_check.stdout if docker_check.rc == 0 else 'Not installed' }}"
          - "Docker Compose version: {{ compose_check.stdout if compose_check.rc == 0 else 'Not installed' }}"
          - "Git version: {{ git_check.stdout if git_check.rc == 0 else 'Not installed' }}"

    - name: Set installation required flag
      ansible.builtin.set_fact:
        install_required: "{{ docker_check.rc != 0 or compose_check.rc != 0 or git_check.rc != 0 }}"
      
    - name: Update package cache
      ansible.builtin.apt:
        update_cache: true
      when: install_required

    - name: Upgrade all packages
      ansible.builtin.apt:
        upgrade: dist
      when: install_required

    - name: "Install Git"
      ansible.builtin.apt:
        name: "git"
        state: present
      when: git_check.rc != 0

    - name: Install required system packages
      ansible.builtin.apt:
        pkg:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: true
      when: install_required

    - name: Create keyrings directory
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
        when: docker_check.rc != 0

    - name: Download Docker GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /tmp/docker.gpg
        mode: '0644'
        when: docker_check.rc != 0

    - name: Add Docker's official GPG key
      ansible.builtin.command:
        cmd: gpg --dearmor -o /etc/apt/keyrings/docker.gpg /tmp/docker.gpg
        creates: /etc/apt/keyrings/docker.gpg
        when: docker_check.rc != 0

    - name: Set Docker repository permissions
      ansible.builtin.file:
        path: /etc/apt/keyrings/docker.gpg
        mode: '0644'
        when: docker_check.rc != 0

    - name: Add Docker repository to sources.list.d
      ansible.builtin.shell: |
        set -o pipefail
        echo "deb [arch=$(dpkg --print-architecture) \
        signed-by=/etc/apt/keyrings/docker.gpg] \
        https://download.docker.com/linux/ubuntu \
        $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        creates: /etc/apt/sources.list.d/docker.list
        executable: /bin/bash
        when: docker_check.rc != 0

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
        when: docker_check.rc != 0

    - name: Install Docker packages
      ansible.builtin.apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: true
        when: docker_check.rc != 0

    - name: Ensure Docker service is started and enabled
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: true

    - name: "Add current user to docker group"
      ansible.builtin.user:
        name: ubuntu
        groups: "sudo,docker"
        append: true
      when: docker_check.rc != 0

    - name: "Force Ansible to reconnect"
      ansible.builtin.meta: reset_connection
      when: docker_check.rc != 0

    - name: "Download Docker Compose"
      ansible.builtin.get_url:
        url: "https://github.com/docker/compose/releases/latest/download/docker-compose-{{ ansible_system | lower }}-{{ ansible_architecture }}"
        dest: /usr/local/bin/docker-compose
        mode: '0755'
      when: compose_check.rc != 0

    - name: Final version check
      ansible.builtin.debug:
        msg:
          - "Installation complete. Current versions:"
          - "Docker: {{ lookup('pipe', 'docker --version') }}"
          - "Docker Compose: {{ lookup('pipe', 'docker-compose --version') }}"
          - "Git: {{ lookup('pipe', 'git --version') }}"
      when: install_required

name: Run Services

on:
    workflow_run:
        workflows: 
            - "Ansible: setup docker on machines"
        types:
            - completed

jobs:
  get-hosts-IPs:
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      
      - name: download machine instances IPs
        uses: dawidd6/action-download-artifact@v6
        with:
          name: instances
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: "Ansible: setup docker on machines"
          run_id: ${{ github.event.workflow_run.id }}

      - name: Extract IPs
        id: extract-ips
        run: |
          EUREKA_IP=$(jq -r '.eurekaIP' instances.json)
          API_GW_IP=$(jq -r '.apiGwIP' instances.json)
          CONFIG_SERVER_IP=$(jq -r '.configServerIp' instances.json)
          echo "EUREKA_IP=$EUREKA_IP" >> $GITHUB_OUTPUT
          echo "API_GW_IP=$API_GW_IP" >> $GITHUB_OUTPUT
          echo "CONFIG_SERVER_IP=$CONFIG_SERVER_IP" >> $GITHUB_OUTPUT
    outputs:
      eurekaIP: ${{ steps.extract-ips.outputs.EUREKA_IP }}
      apiGwIP: ${{ steps.extract-ips.outputs.API_GW_IP }}
      configServerIp: ${{ steps.extract-ips.outputs.CONFIG_SERVER_IP }}

  prep-eureka:
    needs: get-hosts-IPs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Download env template
        run: |
          wget https://raw.githubusercontent.com/Form-iit/service-discovery/main/docker-compose.template.env -O .env.template
        
      - name: Prepare environment file
        env:
          eurekaIP: ${{ needs.get-hosts-IPs.outputs.eurekaIP }}
          encoded_password: ${{ secrets.EUREKA_ADMIN_PASSWORD }}
        run: |
          encoded_password=$(echo -n "${encoded_password}" | jq -sRr @uri)
          sed -i "s/placeholder_server_port/${{ secrets.EUREKA_SERVER_PORT }}/g" .env.template
          sed -i "s/placeholder_ip_address/$eurekaIP/g" .env.template
          sed -i "s|placeholder_serviceurl|http://${{ secrets.EUREKA_ADMIN_USERNAME }}:$encoded_password@$eurekaIP:${{ secrets.EUREKA_SERVER_PORT }}/eureka|g" .env.template
          sed -i "s/placeholder_username/${{ secrets.EUREKA_ADMIN_USERNAME }}/g" .env.template
          sed -i "s/placeholder_password/${{ secrets.EUREKA_ADMIN_PASSWORD }}/g" .env.template
          mv .env.template .env
          
      - name: Upload env file
        uses: actions/upload-artifact@v4
        with:
          name: .env
          path: ./.env
          overwrite: true
          retention-days: 1
          include-hidden-files: true
  run-eureka:
    needs: 
      - get-hosts-IPs
      - prep-eureka
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      
      - name: download .env file
        uses: dawidd6/action-download-artifact@v6
        with:
          name: .env
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_id: ${{ github.run_id }}  # Current run ID, not workflow_run.id
          path: ./src/ansible/playbooks/
      
      - name: download ansible inventory
        uses: dawidd6/action-download-artifact@v6
        with:
          name: ansible-inventory
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_id: ${{ github.event.workflow_run.id }}
          workflow: "Ansible: setup docker on machines"
    
      - name: setup ssh keys and known hosts
        uses: ./.github/actions/setup-ssh
        with:
          target_ips: ${{ needs.get-hosts-IPs.outputs.apiGwIP }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: run eureka
        run: |
          ansible-playbook -i inventory src/ansible/playbooks/run_eureka.yml
  prep-config-server:
    needs: 
      - get-hosts-IPs
      - run-eureka
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      - name: Download env template
        run: |
          wget https://raw.githubusercontent.com/Form-iit/Config-service/main/docker-compose.template.env -O .env.template
          
      - name: Prepare environment file
        env:
          configServerIp: ${{ needs.get-hosts-IPs.outputs.configServerIp }}
          eurekaIP: ${{ needs.get-hosts-IPs.outputs.eurekaIP }}
          encoded_password: ${{ secrets.EUREKA_ADMIN_PASSWORD }}
        run: |
          encoded_password=$(echo -n "${encoded_password}" | jq -sRr @uri)
          sed -i "s/placeholder_spring_profile/${{ secrets.CONFIG_SERVER_ACTIVE_PROFILE }}/g" .env.template
          sed -i "s/placeholder_server_port/${{ secrets.CONFIG_SERVER_PORT }}/g" .env.template
          sed -i "s/placeholder_username/${{ secrets.CONFIG_SERVER_USERNAME }}/g" .env.template
          sed -i "s/placeholder_password/${{ secrets.CONFIG_SERVER_PASSWORD }}/g" .env.template
          sed -i "s|placeholder_config_server_git_uri|https://github.com/Form-iit/Config-vault|g" .env.template
          sed -i "s|placeholder_serviceurl|http://${{ secrets.EUREKA_ADMIN_USERNAME }}:$encoded_password@$eurekaIP:${{ secrets.EUREKA_SERVER_PORT }}/eureka|g" .env.template
          mv .env.template .env
          
      - name: Upload env file
        uses: actions/upload-artifact@v4
        with:
          name: .config.env
          path: ./.env
          overwrite: true
          retention-days: 1
          include-hidden-files: true
   
  run-config-server:
    needs: 
      - get-hosts-IPs
      - prep-config-server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      
      - name: download .env file
        uses: dawidd6/action-download-artifact@v6
        with:
          name: .config.env
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_id: ${{ github.run_id }}
          path: ./src/ansible/playbooks/
      
      - name: download ansible inventory
        uses: dawidd6/action-download-artifact@v6
        with:
          name: ansible-inventory
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_id: ${{ github.event.workflow_run.id }}
          workflow: "Ansible: setup docker on machines"
      
      - name: setup ssh keys and known hosts
        uses: ./.github/actions/setup-ssh
        with:
          target_ips: ${{ needs.get-hosts-IPs.outputs.apiGwIP }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: run config server
        run: |
          ansible-playbook -i inventory src/ansible/playbooks/run_configServer.yml

  prep-api-gw:
    runs-on: ubuntu-latest
    needs: 
      - get-hosts-IPs
      - run-config-server
      - run-eureka
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      
      - name: Download env template
        run: |
          wget https://raw.githubusercontent.com/Form-iit/api-gateway/main/docker-compose.template.env -O .env.template

      - name: Prepare environment file
        env:
          eurekaIP: ${{ needs.get-hosts-IPs.outputs.eurekaIP }}
          configServerIp: ${{ needs.get-hosts-IPs.outputs.configServerIp }}
          encoded_password: ${{ secrets.EUREKA_ADMIN_PASSWORD }}
        run: |
          encoded_password=$(echo -n "${encoded_password}" | jq -sRr @uri)
          basicAuth=$(printf '%s:%s' "${{ secrets.EUREKA_ADMIN_USERNAME }}" "${{ secrets.EUREKA_ADMIN_PASSWORD }}" | base64 2>/dev/null)
          sed -i "s|active_profile_template|${{ secrets.API_GW_ACTIVE_PROFILE }}|g" .env.template
          sed -i "s|config_server_url_template|http://$configServerIp:${{ secrets.CONFIG_SERVER_PORT }}|g" .env.template
          sed -i "s|cloud_config_username_template|${{ secrets.CONFIG_SERVER_USERNAME }}|g" .env.template
          sed -i "s|cloud_config_password_template|${{ secrets.CONFIG_SERVER_PASSWORD }}|g" .env.template
          sed -i "s|eureka_client_serviceurl_defaultzone_template|http://${{ secrets.EUREKA_ADMIN_USERNAME }}:$encoded_password@$eurekaIP:${{ secrets.EUREKA_SERVER_PORT }}/eureka|g" .env.template
          sed -i "s|eureka_instance_IP_address_template|$eurekaIP|g" .env.template
          sed -i "s|eureka_server_url_template|http://$eurekaIP:${{ secrets.EUREKA_SERVER_PORT }}|g" .env.template
          sed -i "s|eureka_basic_auth_template|Basic $basicAuth|g" .env.template
          mv .env.template .env

      - name: show env file
        run: |
          cat .env
          
      - name: Upload env file
        uses: actions/upload-artifact@v4
        with:
          name: .api-gw.env
          path: ./.env
          overwrite: true
          retention-days: 1
          include-hidden-files: true

  run-api-gw:
    needs: 
      - get-hosts-IPs
      - prep-api-gw
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      
      - name: download .env file
        uses: dawidd6/action-download-artifact@v6
        with:
          name: .api-gw.env
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_id: ${{ github.run_id }}
          path: ./src/ansible/playbooks/
      
      - name: download ansible inventory
        uses: dawidd6/action-download-artifact@v6
        with:
          name: ansible-inventory
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_id: ${{ github.event.workflow_run.id }}
          workflow: "Ansible: setup docker on machines"
      
      - name: setup ssh keys and known hosts
        uses: ./.github/actions/setup-ssh
        with:
          target_ips: ${{ needs.get-hosts-IPs.outputs.apiGwIP }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: run api gateway service
        run: |
          ansible-playbook -i inventory src/ansible/playbooks/run_apiGW.yml
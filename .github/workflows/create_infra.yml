name: Infrastructure Deployment

on:
  # Manual trigger
  workflow_dispatch:

  # Trigger on new releases
  release:
    types: [created] # Triggers when a new release is created

jobs:
  terraform-provision:
    runs-on: ubuntu-latest
    
    env:
      TF_CLOUD_ORGANIZATION: "Form-iit"
      TF_API_TOKEN: "${{ secrets.TF_CLOUD_API_TOKEN }}"
      TF_WORKSPACE: "github-actions-pipeline"
      CONFIG_DIRECTORY: "src/terraform"

    steps:
      - uses: actions/checkout@v4
      
      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.3.2
        id: upload-configuration
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}

      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.3.2
        id: create-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.upload-configuration.outputs.configuration_version_id }}

      - name: Apply Run
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.3.2
        id: apply-run
        with:
          run: ${{ steps.create-run.outputs.run_id }}

      - name: Fetch Terraform Outputs
        uses: hashicorp/tfc-workflows-github/actions/workspace-output@v1.3.2
        id: workspace-output
        with:
          workspace: ${{ env.TF_WORKSPACE }}

      - name: Upload Terraform Outputs
        env:
          TF_OUTPUTS: ${{ steps.workspace-output.outputs.outputs }}
        run: |
          echo "$TF_OUTPUTS" > terraform-outputs.json
          
      - uses: actions/upload-artifact@v4
        with:
          name: terraform-outputs
          path: terraform-outputs.json
          retention-days: 1
          overwrite: true